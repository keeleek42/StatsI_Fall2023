for (j in na_indices) {
if (j > 1 && j < nrow(mat)) {
mat[j, i] <- mean(c(mat[j-1, i], mat[j+1, i]), na.rm = TRUE)
} else if (j == 1) {
mat[j, i] <- mat[j+1, i]
} else if (j == nrow(mat)) {
mat[j, i] <- mat[j-1, i]
}
}
}
return(mat)
}
print(mat)
mat(clear_na)
clear_na(mat)
#make this example reproducible
set.seed(0)
#create data frame
data <- data.frame(program = rep(c('A', 'B', 'C'), each = 30),
weight_loss = c(runif(30, 0, 3),
runif(30, 0, 5),
runif(30, 1, 7)))
#view first six rows of data frame
head(data)
program weight_loss
#view first six rows of data frame
head(data)
#fit one-way ANOVA model
model <- aov(weight_loss ~ program, data = data)
summary(model)
TukeyHSD(model)
#####################
#load libraries
#set wd
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#remove objects
rm(list=ls())
#detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
#load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
if(!require(wbstats)){
install.packages("wbstats")
library(wbstats)}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)}
if(!require(stargazer)){
install.packages("stargazer")
library(stargazer)}
if(!require(readr)){
install.packages("readr")
library(readr)}
if(!require(car)){
install.packages("car")
library(car)}
# here is where you load any necessary packages
# ex: stringr
lapply(c("stringr"),  pkgTest) #stringr is working
data(Prestige)
#1a
Prestige$professional <- ifelse(Prestige$type == "prof", 1, 0)
str(Prestige$professional)
#1b
model1 <- lm(prestige ~ income + professional, income:professional,
Data = Prestige)
model1
#1b
model1 <- lm(prestige ~ income + professional, income:professional,
Data = Prestige)
str(Prestige$professional)
#1b
model1 <- lm(prestige ~ prestige$income + professional, income:professional,
Data = Prestige)
#1b
model1 <- lm(prestige ~ Prestige$income + professional, income:professional,
Data = Prestige)
model1
Prestige$income
#1b
model1 <- lm(prestige ~ Prestige$income + professional, income:professional,
Data = Prestige)
#1b
model1 <- lm(prestige ~ income + professional, income:professional,
Data = Prestige)
Prestige$income
income
df <- data(Prestige)
force(Prestige)
#####################
#load libraries
#set wd
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#clear global .envir
#####################
#remove objects
rm(list=ls())
#detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
#load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
if(!require(wbstats)){
install.packages("wbstats")
library(wbstats)}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)}
if(!require(stargazer)){
install.packages("stargazer")
library(stargazer)}
if(!require(readr)){
install.packages("readr")
library(readr)}
if(!require(car)){
install.packages("car")
library(car)}
# here is where you load any necessary packages
# ex: stringr
lapply(c("stringr"),  pkgTest) #stringr is working
df <- data(Prestige)
help(Prestige)
##########
##########---
##########
#1a
df$professional <- ifelse(df$type == "prof", 1, 0)
model1
#1b
model1 <- lm(df ~ income + professional, income:professional,
Data = df)
income
df$income
df$income
Prestige$income
#1a
Prestige$professional <- ifelse(Prestige$type == "prof", 1, 0)
str(Prestige$professional)
#####################
#load libraries
#set wd
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#clear global .envir
#####################
#remove objects
rm(list=ls())
#detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
#load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
if(!require(wbstats)){
install.packages("wbstats")
library(wbstats)}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)}
if(!require(stargazer)){
install.packages("stargazer")
library(stargazer)}
if(!require(readr)){
install.packages("readr")
library(readr)}
if(!require(car)){
install.packages("car")
library(car)}
# here is where you load any necessary packages
# ex: stringr
lapply(c("stringr"),  pkgTest) #stringr is working
df <- data(Prestige)
help(Prestige)
##########
##########---
##########
#1a
Prestige$professional <- ifelse(Prestige$type == "prof", 1, 0)
str(Prestige$professional)
Prestige$income
#1b
model1 <- lm(df ~ income + professional, income:professional,
Data = df)
Prestige
str(Prestige$professional)
help(Prestige)
#1b
Prestige$income <- as.numeric(Prestige$income)
model1 <- lm(df ~ income + professional, income:professional,
Data = df)
model1 <- lm(df ~ income + professional, income:professional,
Data = df)
str(Prestige)
model1 <- lm(df ~ income + professional, income:professional,
Data = Prestige)
model1 <- lm(df ~ income + professional, income:professional,
Data = Prestige)
model1
model1 <- lm(df ~ income + professional, income:professional,
Data = Prestige)
#1b
Prestige$income <- as.integer(Prestige$income)
str(Prestige)
model1 <- lm(df ~  income + professional, income:professional,
Data = Prestige)
model1 <- lm(prestige ~ income + professional, income:professional,
Data = Prestige)
#1b
Prestige$income <- as.integer(Prestige$income)
str(Prestige)
model1 <- lm(prestige ~ income + professional, income:professional,
Data = Prestige)
model1 <- lm(prestige ~ income, data = Prestige)
model1 <- lm(prestige ~ income + professional, income:professional, Data = Prestige)
model1 <- lm(prestige ~ income + professional, income:professional, Data = Prestige)
model1 <- lm(prestige ~ income + professional, professional, Data = Prestige)
model1 <- lm(prestige ~ income + professional, Data = Prestige)
#####################
#load libraries
#set wd
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#remove objects
rm(list=ls())
#detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
#load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
if(!require(wbstats)){
install.packages("wbstats")
library(wbstats)}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)}
if(!require(stargazer)){
install.packages("stargazer")
library(stargazer)}
if(!require(readr)){
install.packages("readr")
library(readr)}
if(!require(car)){
install.packages("car")
library(car)}
# here is where you load any necessary packages
# ex: stringr
lapply(c("stringr"),  pkgTest) #stringr is working
df <- data(Prestige)
help(Prestige)
#1a
Prestige$professional <- ifelse(Prestige$type == "prof", 1, 0)
str(Prestige$professional)
#1b
Prestige$income <- as.integer(Prestige$income)
str(Prestige)
model1 <- lm(prestige ~ income + professional, Data = Prestige)
str(Prestige$professional)
model1 <- lm(Prestige$prestige ~ Prestige$income + Prestige$professional,
Prestige$income:Prestige$professional)
if(!require(car)){
install.packages("car")
library(car)}
library(car)
install.packages(car)
install.packages(car)
library(car)
install.packages("car")
install.packages("car")
model1 <- lm(Prestige$prestige ~ Prestige$income + Prestige$professional,
Prestige$income:Prestige$professional)
model1 <- lm(Prestige$prestige ~ Prestige$income + Prestige$professional +
Prestige$income:Prestige$professional)
model1 <- lm(prestige ~ income + professional + income:professional,
Data = Prestige)
model1 <- lm(prestige ~ income + professional + income:professional,
Data = Prestige)
model1 <- lm(prestige ~ income + professional + income:professional,
Data = Prestige)
model1 <- lm(Data = Prestige, prestige ~ income + professional + income:professional)
model1 <- lm(Data = 'Prestige', prestige ~ income + professional + income:professional)
model1 <- lm(prestige ~ income + professional + income:professional,
Data = Prestige)
model1 <- lm(prestige ~ income + professional + income:professional,
data = Prestige)
summary(model1)
model1 <- lm(prestige ~ income * professional,
data = Prestige)
summary(model1)
model1 <- lm(prestige ~ income * professional,
data = Prestige)
summary(model1)
#####################
#load libraries
#set wd
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#remove objects
rm(list=ls())
#detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
#load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
if(!require(wbstats)){
install.packages("wbstats")
library(wbstats)}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)}
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)}
if(!require(stargazer)){
install.packages("stargazer")
library(stargazer)}
if(!require(readr)){
install.packages("readr")
library(readr)}
install.packages("car")
library(car)
# here is where you load any necessary packages
# ex: stringr
lapply(c("stringr"),  pkgTest) #stringr is working
df <- data(Prestige)
help(Prestige)
#1a
Prestige$professional <- ifelse(Prestige$type == "prof", 1, 0)
str(Prestige$professional)
#1b
Prestige$income <- as.integer(Prestige$income)
str(Prestige)
model1 <- lm(prestige ~ income * professional,
data = Prestige)
summary(model1)
#1f
model1 <- lm(prestige ~ (income*1000) * professional, data = Prestige)
summary(model2)
#1f
model2 <- lm(prestige ~ (income*1000) * professional, data = Prestige)
summary(model2)
#1f
model2 <- lm(prestige ~ (income*1000) * professional, data = Prestige)
#1f
model1$coefficients
#1f
model1$coefficients$(Intercept)
#1f
model1$coefficients["(Intercept)"]
#1f
model1$coefficients["(Intercept)"] + (model1$coefficients["income"])*1000
#1f
prestige1000 <- (model1$coefficients["(Intercept)"] +
(model1$coefficients["income"])*1000 +
model1$coefficients["professional"] +
model1$coefficients["income:professional"])
prestige1000
#1f
prestige1000 <- (model1$coefficients["(Intercept)"] +
(model1$coefficients["income"]*1000) +
model1$coefficients["professional"] +
model1$coefficients["income:professional"])
prestige1000
#1f
prestige1000 <- (model1$coefficients["(Intercept)"] +
(model1$coefficients["income"]*1000) +
model1$coefficients["professional"] -
model1$coefficients["income:professional"])
prestige1000
#1f
prestige1000 <- (model1$coefficients["(Intercept)"] +
(model1$coefficients["income"]*1000) +
model1$coefficients["professional"] -
model1$coefficients["(income*1000):professional"])
prestige1000
#1f
new_income_co <- (model1$coefficients["income"]*1000)
new_income_co
prestige1000 <- (model1$coefficients["(Intercept)"] +
new_income_co +
model1$coefficients["professional"] -
model1$coefficients["new_income_co:professional"])
prestige1000
#1f
prestige1000 <- (model1$coefficients["(Intercept)"] +
(model1$coefficients["income"]*1000) +
model1$coefficients["professional"] -
model1$coefficients["income:professional"])
prestige1000
#1f
prestige1000 <- (model1$coefficients["(Intercept)"] +
(model1$coefficients["income"]*1000) +
model1$coefficients["professional"] -
model1$coefficients["income:professional"]*1000)
prestige1000
#1f
prestige1000 <- (model1$coefficients["(Intercept)"] +
(model1$coefficients["income"]*1000) +
model1$coefficients["professional"]*1 -
model1$coefficients["income:professional"]*1000)
prestige1000
#1g
prestige6000 <- (model1$coefficients["(Intercept)"] +
(model1$coefficients["income"]*6000) +
model1$coefficients["professional"]*1 - #1 = professional
model1$coefficients["income:professional"]*6000)
prestige6000
# Remove objects
rm(list=ls())
# Detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# Load any necessary packages
lapply(c("stargazer","arm","emmeans","ggplot2"),  pkgTest)
# Set working directory for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
